name: Build Image

on:
  workflow_call:
    inputs:
      image:
        description: Image name
        required: true
        type: string
      dockerfiles:
        description: JSON encoded array of Dockerfiles
        required: true
        type: string
      variants:
        description: JSON encode array of variants
        default: '[""]'
        type: string
      registry:
        description: Which docker registry to use
        default: ghcr.io
        type: string
      platforms:
        description: Comma separated list of platforms to build for
        default: linux/amd64,linux/arm64
        type: string
      build-args:
        description: Additional build args in VARIABLE=value
        default: ""
        type: string

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        dockerfile: ${{ fromJson(inputs.dockerfiles) }}
        variant: ${{ fromJson(inputs.variants) }}

    concurrency:
      group: build-${{ inputs.image }}-${{ matrix.dockerfile }}-${{ matrix.variant }}
      cancel-in-progress: true

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v5

      - uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version information and date epoch
        id: info
        run: |
          echo "prefix=$(sed -nE 's/^FROM +.*:([a-z]*)+([0-9.]+)\$?.*$/\1/p' '${{ matrix.dockerfile }}')" >> $GITHUB_OUTPUT
          echo "version=$(sed -nE 's/^FROM +.*:([a-z]*)+([0-9.]+)\$?.*$/\2/p' '${{ matrix.dockerfile }}')" >> $GITHUB_OUTPUT
          echo "major=$(sed -nE 's/^FROM +.*:([a-z]*)+([0-9]+)\.([0-9]+)\.?([0-9]+)?\$?.*$/\2/p' '${{ matrix.dockerfile }}')" >> $GITHUB_OUTPUT
          echo "minor=$(sed -nE 's/^FROM +.*:([a-z]*)+([0-9]+)\.([0-9]+)\.?([0-9]+)?\$?.*$/\3/p' '${{ matrix.dockerfile }}')" >> $GITHUB_OUTPUT
          echo "patch=$(sed -nE 's/^FROM +.*:([a-z]*)+([0-9]+)\.([0-9]+)\.?([0-9]+)?\$?.*$/\4/p' '${{ matrix.dockerfile }}')" >> $GITHUB_OUTPUT

          echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Generate image tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image }}
          flavor: |
            latest=false
            prefix=${{ steps.info.outputs.prefix }}
            suffix=${{ matrix.variant }}
          tags: |
            type=raw,value=${{ steps.info.outputs.version }}
            type=raw,value=${{ steps.info.outputs.major }}
            type=raw,value=${{ steps.info.outputs.major }}.${{ steps.info.outputs.minor }}

      - name: Build and push image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          cache-from: type=gha,scope=build-${{ inputs.image }}-${{ matrix.dockerfile }}-${{ matrix.variant }}
          cache-to: type=gha,mode=max,scope=build-${{ inputs.image }}-${{ matrix.dockerfile }}-${{ matrix.variant }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          build-args: |
            VARIANT=${{ matrix.variant }}
            ${{ inputs.build-args }}

      - name: Generate provenance attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ inputs.registry }}/${{ github.repository }}/${{ inputs.image }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
